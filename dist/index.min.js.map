{"version":3,"sources":["index.js"],"names":["currentTime","document","querySelector","setHours","setMinutes","setSeconds","setAmPm","seconds","timeString","Date","getElementById","minutes","now","getMinutes","getSeconds","setInterval","updateClock","toString","padStart","dropDownMenu","start","element","dropDown","createElement","end","i","getCurrentTime","value","time","innerHTML","toLocaleTimeString","hour","appendChild","minute","getInput","preventDefault","hour12","hourValue","secondValue","e","setAlarm","parseInt","saveAlarm","second","amPm","concat","addAlaramToDom","arguments","length","undefined","alarm","classList","deleteButton","addEventListener","alarmContainer","prepend","fetching","isPresent","intervalId","add","setItem","stringify","alarms","forEach","localStorage","getItem","JSON","parse","deleteAlarm","console","deleteAlarmFromLocal","push","splice","event","self","target","clearInterval","parentElement","log","remove","checkAlarams","index","indexOf","window","fetchAlarm","setAlarmButton"],"mappings":"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","file":"index.min.js","sourcesContent":["const currentTime = document.querySelector(\"#current-time\");\r\nconst setHours = document.querySelector(\"#hours\");\r\nconst setMinutes = document.querySelector(\"#minutes\");\r\nconst setSeconds = document.querySelector(\"#seconds\");\r\nconst setAmPm = document.querySelector(\"#am-pm\");\r\nconst setAlarmButton = document.querySelector(\"#submitButton\");\r\nconst alarmContainer = document.querySelector(\"#alarms-container\");\r\n\r\n// Adding Hours, Minutes, Seconds in DropDown Menu\r\nwindow.addEventListener(\"DOMContentLoaded\", (event) => {\r\n  \r\n  dropDownMenu(1, 12, setHours);\r\n \r\n  dropDownMenu(0, 59, setMinutes);\r\n\r\n  dropDownMenu(0, 59, setSeconds);\r\n\r\n  setInterval(getCurrentTime, 1000);\r\n  fetchAlarm();\r\n});\r\n\r\n// Event Listener added to Set Alarm Button\r\nsetAlarmButton.addEventListener(\"click\", getInput);\r\n\r\nfunction updateClock() {\r\n  var now = new Date();\r\n  var hours = now.getHours();\r\n  var minutes = now.getMinutes();\r\n  var seconds = now.getSeconds();\r\n\r\n  var timeString = hours.toString().padStart(2, '0') + ':'\r\n    + minutes.toString().padStart(2, '0') + ':'\r\n    + seconds.toString().padStart(2, '0');\r\n\r\n  document.getElementById('clock').textContent = timeString;\r\n}\r\n\r\n// Update the clock every second\r\nsetInterval(updateClock, 1000);\r\nfunction dropDownMenu(start, end, element) {\r\n  for (let i = start; i <= end; i++) {\r\n    const dropDown = document.createElement(\"option\");\r\n    dropDown.value = i < 10 ? \"0\" + i : i;\r\n    dropDown.innerHTML = i < 10 ? \"0\" + i : i;\r\n    element.appendChild(dropDown);\r\n  }\r\n}\r\n\r\n\r\nfunction getCurrentTime() {\r\n  let time = new Date();\r\n  time = time.toLocaleTimeString(\"en-US\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n    hour12: true,\r\n  });\r\n  currentTime.innerHTML = time;\r\n\r\n  return time;\r\n}\r\n\r\n\r\nfunction getInput(e) {\r\n  e.preventDefault();\r\n  const hourValue = setHours.value;\r\n  const minuteValue = setMinutes.value;\r\n  const secondValue = setSeconds.value;\r\n  const amPmValue = setAmPm.value;\r\n\r\n  const alarmTime = convertToTime(\r\n    hourValue,\r\n    minuteValue,\r\n    secondValue,\r\n    amPmValue\r\n  );\r\n  setAlarm(alarmTime);\r\n}\r\n\r\n// Converting time to 24 hour format\r\nfunction convertToTime(hour, minute, second, amPm) {\r\n  return `${parseInt(hour)}:${minute}:${second} ${amPm}`;\r\n}\r\n\r\n\r\nfunction setAlarm(time, fetching = false) {\r\n  const alarm = setInterval(() => {\r\n    if (time === getCurrentTime()) {\r\n      alert(\"Alarm Ringing\");\r\n    }\r\n    console.log(\"running\");\r\n  }, 500);\r\n\r\n  addAlaramToDom(time, alarm);\r\n  if (!fetching) {\r\n    saveAlarm(time);\r\n  }\r\n}\r\n\r\n// Alarms set by user Dislayed in HTML\r\nfunction addAlaramToDom(time, intervalId) {\r\n  const alarm = document.createElement(\"div\");\r\n  alarm.classList.add(\"alarm\", \"mb\", \"d-flex\");\r\n  alarm.innerHTML = `\r\n              <div class=\"time\">${time}</div>\r\n              <button class=\"btn delete-alarm\" data-id=${intervalId}>Delete</button>\r\n              `;\r\n  const deleteButton = alarm.querySelector(\".delete-alarm\");\r\n  deleteButton.addEventListener(\"click\", (e) => deleteAlarm(e, time, intervalId));\r\n\r\n  alarmContainer.prepend(alarm);\r\n}\r\n\r\n// Is alarms saved in Local Storage?\r\nfunction checkAlarams() {\r\n  let alarms = [];\r\n  const isPresent = localStorage.getItem(\"alarms\");\r\n  if (isPresent) alarms = JSON.parse(isPresent);\r\n\r\n  return alarms;\r\n}\r\n\r\n// save alarm to local storage\r\nfunction saveAlarm(time) {\r\n  const alarms = checkAlarams();\r\n\r\n  alarms.push(time);\r\n  localStorage.setItem(\"alarms\", JSON.stringify(alarms));\r\n}\r\n\r\n// Fetching alarms from local storage\r\nfunction fetchAlarm() {\r\n  const alarms = checkAlarams();\r\n\r\n  alarms.forEach((time) => {\r\n    setAlarm(time, true);\r\n  });\r\n}\r\n\r\n\r\nfunction deleteAlarm(event, time, intervalId) {\r\n  const self = event.target;\r\n\r\n  clearInterval(intervalId);\r\n\r\n  const alarm = self.parentElement;\r\n  console.log(time);\r\n\r\n  deleteAlarmFromLocal(time);\r\n  alarm.remove();\r\n}\r\n\r\nfunction deleteAlarmFromLocal(time) {\r\n  const alarms = checkAlarams();\r\n\r\n  const index = alarms.indexOf(time);\r\n  alarms.splice(index, 1);\r\n  localStorage.setItem(\"alarms\", JSON.stringify(alarms));\r\n}"]}